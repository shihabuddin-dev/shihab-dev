[
  {
    "title": "PETIFY",
    "about": "A modern pet adoption and donation platform enabling seamless pet adoption, donation campaigns, secure Stripe payments, and animal welfare with a modern UI, secure authentication, and real-time features for users and admins.",
    "technology": ["React", "Firebase", "MongoDB", "Express", "Stripe", "Tailwind CSS"],
    "thumb_img": "https://i.postimg.cc/9MVNRdgF/petify.jpg",
    "live": "https://petify-us.web.app",
    "client": "https://github.com/omarfaruk-dev/petify-client.git",
    "server": "https://github.com/omarfaruk-dev/petify-server.git",
    "description": "Petify is a full-stack web app built with the MERN stack (MongoDB, Express.js, React, Node.js), Vite, Tailwind CSS, and Firebaseâ€”enabling seamless pet adoption, donation campaigns, secure Stripe payments, and animal welfare with a modern UI, secure authentication, and real-time features for users and admins.",
    "challenges": "Integrating Stripe payment gateway for secure donation processing and handling complex payment flows with proper error handling and webhook management. Implementing comprehensive role-based authentication and authorization system for users and admins with different permission levels and secure access controls.",
    "overcome": "I overcame the Stripe integration challenge by implementing proper webhook handling, error management, and using Stripe's test mode for development. For role-based authentication, I created a middleware system with JWT tokens and Firebase Admin SDK to manage different user roles and permissions effectively."
  },
  {
    "title": "FOODIO",
    "about": "A modern, visually appealing restaurant management web application built with React, Vite, and Tailwind CSS offering seamless experience for discovering, ordering, and managing favorite meals with beautiful UI and robust functionality.",
    "technology": ["React", "Firebase", "MongoDB", "Express", "Tailwind CSS"],
    "thumb_img": "https://i.postimg.cc/d0sNPGXG/foodio.jpg",
    "live": "https://foodi0.web.app",
    "client": "https://github.com/omarfaruk-dev/foodio-client",
    "server": "https://github.com/omarfaruk-dev/foodio-server",
    "description": "Foodio is a comprehensive food delivery platform featuring an eye-catching hero slider, infinite scroll gallery, customer reviews, detailed food cards, and secure user authentication. The app includes profile management, order tracking, vendor admin features for food management, and responsive navigation with dark/light theme toggle.",
    "challenges": "Managing food availability and stock tracking to ensure accurate order processing and prevent overselling of items. Implementing a comprehensive order management system that displays order history, status tracking.",
    "overcome": "I overcame the stock management challenge by implementing real-time inventory tracking with MongoDB updates and preventing orders when items are out of stock. For the order management system, I created a comprehensive order page that displays order history and status updates between inventory and order processing."
  },
  {
    "title": "ROOMLY",
    "about": "A modern web application for finding and listing roommates and rooms, designed for trust, privacy, and real connections with seamless browsing, searching, and secure authentication features.",
    "technology": ["React", "Firebase", "MongoDB", "Express", "Tailwind CSS", "DaisyUI"],
    "thumb_img": "https://i.postimg.cc/FFgSc08t/roomly.jpg",
    "live": "https://roomly-app.netlify.app",
    "client": "https://github.com/omarfaruk-dev/roomly-client.git",
    "server": "https://github.com/omarfaruk-dev/roomly-server.git",
    "description": "Roomly is a comprehensive roommate finder and shared housing platform that connects users based on lifestyle preferences, budget, and location. The app allows users to create detailed profiles, search and filter listings, like listings to reveal contact details, and manage their own listings with secure authentication and responsive design.",
    "challenges": "Implementing secure user authentication and profile management with Firebase while ensuring data privacy and user verification. Creating an intuitive listing system with search, filter, and like functionality that efficiently handles large datasets and provides smooth user interactions.",
    "overcome": "I overcame the authentication challenge by implementing Firebase Authentication with Google sign-in, proper session management using React Context, and secure user profile creation. For the listing system, I built efficient MongoDB aggregation pipelines for search and filtering, and implemented a like-based contact reveal mechanism that protects user privacy while enabling connections."
  }
  
  
]

